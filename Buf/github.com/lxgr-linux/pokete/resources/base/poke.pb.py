# DO NOT EDIT!
# This code was auto generated by the `protoc-gen-pokete-resources-python` plugin,
# part of the pokete project, by <lxgr@protonmail.com>
from typing import TypedDict


class BaseIcoDict(TypedDict):
    txt: str
    esc: str | None
    

class BaseIco:
    def __init__(
        self,
        txt: str,
        esc: str | None
    ):
        self.txt: str = txt
        self.esc: str | None = esc
        
    @classmethod
    def from_dict(cls, _d: BaseIcoDict | None) -> "BaseIco" | None:
        if _d is None:
            return None
        return cls(
            txt=_d["txt"],
            esc=_d.get("esc", None),
        )


class PokeDict(TypedDict):
    name: str
    hp: int
    arc: int
    defense: int
    attacks: list[str]
    pool: list[str]
    miss_chance: int
    desc: str
    lose_xp: int
    rarity: int
    types: list[str]
    evolve_poke: str
    evolve_lvl: int
    initiative: int
    night_active: bool | None
    ico: list["BaseIcoDict"]
    

class Poke:
    def __init__(
        self,
        name: str,
        hp: int,
        arc: int,
        defense: int,
        attacks: list[str],
        pool: list[str],
        miss_chance: int,
        desc: str,
        lose_xp: int,
        rarity: int,
        types: list[str],
        evolve_poke: str,
        evolve_lvl: int,
        initiative: int,
        night_active: bool | None,
        ico: list["BaseIco"]
    ):
        self.name: str = name
        self.hp: int = hp
        self.arc: int = arc
        self.defense: int = defense
        self.attacks: list[str] = attacks
        self.pool: list[str] = pool
        self.miss_chance: int = miss_chance
        self.desc: str = desc
        self.lose_xp: int = lose_xp
        self.rarity: int = rarity
        self.types: list[str] = types
        self.evolve_poke: str = evolve_poke
        self.evolve_lvl: int = evolve_lvl
        self.initiative: int = initiative
        self.night_active: bool | None = night_active
        self.ico: list["BaseIco"] = ico
        
    @classmethod
    def from_dict(cls, _d: PokeDict | None) -> "Poke" | None:
        if _d is None:
            return None
        return cls(
            name=_d["name"],
            hp=_d["hp"],
            arc=_d["arc"],
            defense=_d["defense"],
            attacks=_d["attacks"],
            pool=_d["pool"],
            miss_chance=_d["miss_chance"],
            desc=_d["desc"],
            lose_xp=_d["lose_xp"],
            rarity=_d["rarity"],
            types=_d["types"],
            evolve_poke=_d["evolve_poke"],
            evolve_lvl=_d["evolve_lvl"],
            initiative=_d["initiative"],
            night_active=_d.get("night_active", None),
            ico=[BaseIco.from_dict(i) for i in _d["ico"]],
        )
