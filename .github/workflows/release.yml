# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the workflow will run
on:
  push:
    tags:
      - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: version
        run: echo "::set-output name=version::${GITHUB_REF#refs/tags/}"
        id: version
        
      - name: path
        run: echo "::set-output name=path::Pokete-${{ steps.version.outputs.version }}-x86_64.AppImage"
        id: path
      
      # Runs a set of commands using the runners shell
      - name: Prepare
        run: |
          echo ${{ steps.version.outputs.version }}
          echo ${{ steps.path.outputs.path }}
          sudo apt install -y python3-pip python3-setuptools patchelf desktop-file-utils libgdk-pixbuf2.0-dev fakeroot strace fuse
          sudo wget https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage -O /usr/local/bin/appimagetool
          sudo chmod +x /usr/local/bin/appimagetool
          sudo pip3 install git+https://github.com/AppImageCrafters/appimage-builder.git
          
      - name: Build Appimage
        run: appimage-builder --skip-test --recipe assets/AppImageBuilder.yml
        
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: ${{ steps.version.outputs.version }}
          tag_name: ${{ github.ref }}
          body_path: Changelog.md
        env:
          GITHUB_TOKEN: ${{ github.token }}
        
      - name: upload linux artifact
        uses: actions/upload-release-asset@v1
        env:
         GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.path.outputs.path }}
          asset_name: ${{ steps.path.outputs.path }}
          asset_content_type: application/appimage
